services:
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.6
    command: start
    environment:
      KC_HOSTNAME: localhost/auth
      KC_HOSTNAME_ADMIN: localhost/auth
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KC_PROXY: edge
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    depends_on:
      - db

  backend:
    build: ./backend
    restart: always
    volumes:
      - ./backend:/app
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: myrealm #Change this
      KEYCLOAK_CLIENT_ID: myclient #Change this
      KEYCLOAK_CLIENT_SECRET: mysecret #Change this
    depends_on:
      - db
      - keycloak

  frontend:
    build: ./frontend
    restart: always
    volumes:
      - ./frontend:/app
      - "/app/node_modules"
    environment:
      REACT_APP_API_URL: http://localhost/api
      REACT_APP_KEYCLOAK_URL: http://localhost/auth
      REACT_APP_KEYCLOAK_REALM: myrealm #Change this
      REACT_APP_KEYCLOAK_CLIENT_ID: myclient #Change this
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
      - keycloak

volumes:
  db-data: